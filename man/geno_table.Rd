% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geno-table.r
\name{geno_table}
\alias{geno_table}
\title{Class: geno_table}
\usage{
geno_table(conc, n, bin_size)
}
\value{
A <\code{geno_table}> object with the slots:
\itemize{
  \item "samples": table with the fields:
    \itemize{
      \item "genotype": The original genotype in format: \dQuote{03:FYKD/04:ADCGE}.
      \item "zygosity": One of \sQuote{heterozygous} or \sQuote{homozygous}.
      \item "conc": Randomly attributed DNA concentrations.
      \item "bins": Intervals of DNA concentrations used to attribute
        concentration-dependent errors.
      \item "idx": \strong{key}; A running index.
    }
  \item "errors": table with the fields:
    \itemize{
      \item "genotype": The genotype after error injection.
      \item "zygosity": The zygosity after error injection.
      \item "idx": \strong{key}; A running index.
    }
}
and the attributes:
\itemize{
 \item "penv": The enclosing environment of the <geno_table> constructor
 containing memoised mapping and remapping functions created by
 \code{\link{make_mapper}} and a table of observed and expected genotype
 frequencies generated by \code{\link{gtf_table}}.
 \item "breaks": The cut points used to slice up the DNA concentration.
}
}
\description{
Constructor function for a <\code{geno_table}> object. Created
by the factory function \code{\link{make_genotype_sampler}}.
}
\details{
A function that takes a vector of DNA concentrations
to draw \emph{n} random genotypes based on observed genotype
frequencies and randomly attributes DNA concentrations to these
genotypes.
}
\examples{
\dontrun{
data(dpb1)
dpb1.pl <- dpb1[provenance == "PL"]

## Generate a distribution of DNA concentrations
conc <- sample_dna_concentration(dpb1.pl, n = 1000, ncores = 8)

## Generate a sampling function
data(dpb1_eag1412)
geno_table <- make_genotype_sampler(dpb1.pl, dpb1_eag1412)

## Access mapping and remapping functions as well as genotype frequencies
mapper(geno_table)
remapper(geno_table)
gtf_table(genotable)

## Sample genotypes
n <- 10000
bin_size <- 3
ans <- geno_table(conc, n, bin_size)
ans

summary(ans)
samples(ans)
}
}

